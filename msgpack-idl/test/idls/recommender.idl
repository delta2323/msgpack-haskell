# Jubatus: Online machine learning framework for distributed environment
# Copyright (C) 2011,2012 Preferred Infrastructure and Nippon Telegraph and Telephone Corporation.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

type similar_result = list<tuple<string, float> >

message config_data {
  0: string method
  1: string converter #JSON
}

message datum {
  0: list<tuple<string, string> >  string_values
  1: list<tuple<string, double> >  num_values
}

service recommender {

  #@broadcast #@update #@all_and
  bool set_config(0: string name, 1: config_data c) # //@broadcast

  #@random #@analysis #@pass
  config_data get_config(0: string name) # //@random

  #@cht #@update #@all_and
  bool clear_row(0: string name, 1: string id) # //@cht

  #@cht #@update #@all_and
  bool update_row(0: string name, 1: string id, 2: datum d) # //@cht

  #@broadcast #@update #@all_and
  bool clear(0: string name) # //@broadcast

  #@cht #@analysis #@pass
  datum complete_row_from_id(0: string name, 1: string id) # //@cht

  #@random #@analysis #@pass
  datum complete_row_from_data(0: string name, 1: datum d) # //@random

  #@cht #@analysis #@pass
  similar_result similar_row_from_id(0: string name, 1: string id, 2: uint size) # //@cht

  #@random #@analysis #@pass
  similar_result similar_row_from_data(0: string name, 1: datum data, 2: uint size) # //@random

  #@cht #@analysis #@pass
  datum decode_row(0: string name, 1: string id) # //@cht

  #@broadcast #@analysis #@concat
  list<string>  get_all_rows(0: string name) # //@broadcast

  #@random #@analysis #@pass
  float similarity(0: string name, 1: datum lhs, 2:datum rhs) # //@random

  #@random #@analysis #@pass
  float l2norm(0: string name, 1: datum d) # //@random

  #@broadcast #@update #@all_and
  bool save(0: string name, 1: string id) # //@broadcast

  #@broadcast #@update #@all_and
  bool load(0: string name, 1: string id) # //@broadcast

  #@broadcast #@analysis #@merge
  map<string, map<string, string> >  get_status(0: string name) # //@broadcast
}
